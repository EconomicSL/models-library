traders {

  dispatcher {

    executor = "fork-join-executor"

    fork-join-executor {

      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 8

      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 3.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 64

      # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
      # like peeking mode which "pop".
      task-peeking-mode = "FIFO"

    }

    throughput = 5

  }

  number = 1000

  params {

    limitOrderArrivalRate = 1e-2

    askOrderProbability = 0.5

    minAskPrice = 1

    minBidPrice = 1

    maxAskPrice = 200

    maxBidPrice = 200

    minAskQuantity = 1

    minBidQuantity = 1

    maxAskQuantity = 1

    maxBidQuantity = 1

  }
}

markets {

  number = 1

  referencePrice = 100

  dispatcher {

    executor = "fork-join-executor"

    fork-join-executor {

      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 8

      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 3.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 64

      # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
      # like peeking mode which "pop".
      task-peeking-mode = "FIFO"
    }

    throughput = 1000

  }

}